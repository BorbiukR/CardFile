<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CardFile.WebAPI</name>
    </assembly>
    <members>
        <member name="M:CardFile.WebAPI.Controllers.CardController.CreateCardFile(Microsoft.AspNetCore.Http.IFormFile,CardFile.WebAPI.Contracts.Request.CardFileRequest)">
            <summary>
            Create a card file
            </summary>
            <param name="formFiles"></param>
            <param name="request"></param>
            <response code="200">Created a card in the system</response>
            <response code="400">Unable to create a card due to validation error</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.UpdateCardFile(System.Int32,Microsoft.AspNetCore.Http.IFormFile,CardFile.WebAPI.Contracts.Request.CardFileRequest)">
            <summary>
            Update a card file
            </summary>
            <param name="cardFileId"></param>
            <param name="formFiles"></param>
            <param name="request"></param>
            <response code="200">Updated a card in the system</response>
            <response code="400">Unable to update a card due to validation error</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.DeleteCardFileById(System.Int32)">
            <summary>
            Delete a card file by id
            </summary>
            <param name="cardFileId"></param>
            <response code="200">Deleted a card in the system</response>
            <response code="404">Unable to delete a card due error</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.GetAllCardFiles">
            <summary>
            Returns all the card files in the system
            </summary>
            <response code="200">Get all card files</response>
            <response code="404">Not Found any card files</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.GetCardFileByIdAsync(System.Int32)">
            <summary>
            Returns a card file by id
            </summary>
            <param name="id"></param>
            <response code="200">Get a card file</response>
            <response code="404">Not Found any card file</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.GetCardFilesByDateOfCreation(System.DateTime)">
            <summary>
            Returns a card files by date of creation of a cards
            </summary>
            <param name="dateTime"></param>
            <response code="200">Get all card files</response>
            <response code="404">Not Found any card files</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.GetCardFilesByLanguage(System.String)">
            <summary>
            Returns a card files by language of creation of a cards
            </summary>
            <param name="language"></param>
            <response code="200">Get all card files</response>
            <response code="404">Not Found any card files</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.CardController.DownloadFile(System.Int32)">
            <summary>
            Download file by card id
            </summary>
            <param name="cardFileId"></param>
            <response code="200">Download file</response>
            <response code="404">Not Found any file</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.UserController.RegisterAsync(CardFile.WebAPI.Models.Request.UserRegistrationRequest)">
            <summary>
            Register new user
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.UserController.LoginAsync(CardFile.WebAPI.Models.UserLoginRequest)">
            <summary>
            Login to the system
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.UserController.Refresh(CardFile.WebAPI.Contracts.Request.RefreshTokenRequest)">
            <summary>
            Refresh token for user
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.UserController.ConfirmEmail(System.String)">
            <summary>
            Confirm user email
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.UserController.ForgetPassword(System.String)">
            <summary>
            Send email to reset password for user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CardFile.WebAPI.Controllers.UserController.ResetPassword(CardFile.WebAPI.Models.ResetPasswordRequest)">
            <summary>
            Reset password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
    </members>
</doc>
